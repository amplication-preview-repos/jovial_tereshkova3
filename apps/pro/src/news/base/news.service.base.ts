/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, News } from "@prisma/client";

export class NewsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.NewsCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.NewsCountArgs>
  ): Promise<number> {
    return this.prisma.news.count(args);
  }

  async newsItems<T extends Prisma.NewsFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.NewsFindManyArgs>
  ): Promise<News[]> {
    return this.prisma.news.findMany(args);
  }
  async news<T extends Prisma.NewsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.NewsFindUniqueArgs>
  ): Promise<News | null> {
    return this.prisma.news.findUnique(args);
  }
  async createNews<T extends Prisma.NewsCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.NewsCreateArgs>
  ): Promise<News> {
    return this.prisma.news.create<T>(args);
  }
  async updateNews<T extends Prisma.NewsUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.NewsUpdateArgs>
  ): Promise<News> {
    return this.prisma.news.update<T>(args);
  }
  async deleteNews<T extends Prisma.NewsDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.NewsDeleteArgs>
  ): Promise<News> {
    return this.prisma.news.delete(args);
  }
}
